namespace ca;

[UseCulture("ca")]

public class NumberToWordsTests
{
    [Theory]
    [InlineData(-1, "menys primer", GrammaticalGender.Neuter)]
    [InlineData(0, "zero", GrammaticalGender.Neuter)]
    [InlineData(1, "primer", GrammaticalGender.Neuter)]
    [InlineData(1, "primer", GrammaticalGender.Masculine)]
    [InlineData(1, "primera", GrammaticalGender.Feminine)]
    [InlineData(2, "segon", GrammaticalGender.Masculine)]
    [InlineData(2, "segona", GrammaticalGender.Feminine)]
    [InlineData(3, "tercer", GrammaticalGender.Neuter)]
    [InlineData(3, "tercer", GrammaticalGender.Masculine)]
    [InlineData(3, "tercera", GrammaticalGender.Feminine)]
    [InlineData(4, "quart", GrammaticalGender.Masculine)]
    [InlineData(4, "quarta", GrammaticalGender.Feminine)]
    [InlineData(5, "cinquè", GrammaticalGender.Masculine)]
    [InlineData(5, "cinquena", GrammaticalGender.Feminine)]
    [InlineData(6, "sisè", GrammaticalGender.Masculine)]
    [InlineData(6, "sisena", GrammaticalGender.Feminine)]
    [InlineData(7, "setè", GrammaticalGender.Masculine)]
    [InlineData(7, "setena", GrammaticalGender.Feminine)]
    [InlineData(8, "vuitè", GrammaticalGender.Masculine)]
    [InlineData(8, "vuitena", GrammaticalGender.Feminine)]
    [InlineData(9, "novè", GrammaticalGender.Masculine)]
    [InlineData(9, "novena", GrammaticalGender.Feminine)]
    [InlineData(10, "desè", GrammaticalGender.Masculine)]
    [InlineData(10, "desena", GrammaticalGender.Feminine)]
    [InlineData(11, "onzè", GrammaticalGender.Masculine)]
    [InlineData(11, "onzena", GrammaticalGender.Feminine)]
    [InlineData(20, "vintè", GrammaticalGender.Masculine)]
    [InlineData(20, "vintena", GrammaticalGender.Feminine)]
    [InlineData(22, "vint-i-dosè", GrammaticalGender.Masculine)]
    [InlineData(22, "vint-i-dosena", GrammaticalGender.Feminine)]
    [InlineData(30, "trentè", GrammaticalGender.Masculine)]
    [InlineData(30, "trentena", GrammaticalGender.Feminine)]
    [InlineData(34, "trenta-quatrè", GrammaticalGender.Masculine)]
    [InlineData(34, "trenta-quatrena", GrammaticalGender.Feminine)]
    [InlineData(40, "quarantaè", GrammaticalGender.Masculine)]
    [InlineData(40, "quarantaena", GrammaticalGender.Feminine)]
    [InlineData(46, "quaranta-sisè", GrammaticalGender.Masculine)]
    [InlineData(46, "quaranta-sisena", GrammaticalGender.Feminine)]
    [InlineData(50, "cinquantaè", GrammaticalGender.Masculine)]
    [InlineData(50, "cinquantaena", GrammaticalGender.Feminine)]
    [InlineData(57, "cinquanta-setè", GrammaticalGender.Masculine)]
    [InlineData(57, "cinquanta-setena", GrammaticalGender.Feminine)]
    [InlineData(60, "seixantè", GrammaticalGender.Masculine)]
    [InlineData(60, "seixantena", GrammaticalGender.Feminine)]
    [InlineData(69, "seixanta-novè", GrammaticalGender.Masculine)]
    [InlineData(69, "seixanta-novena", GrammaticalGender.Feminine)]
    [InlineData(70, "setantè", GrammaticalGender.Masculine)]
    [InlineData(70, "setantena", GrammaticalGender.Feminine)]
    [InlineData(74, "setanta-quatrè", GrammaticalGender.Masculine)]
    [InlineData(74, "setanta-quatrena", GrammaticalGender.Feminine)]
    [InlineData(80, "vuitantè", GrammaticalGender.Masculine)]
    [InlineData(80, "vuitantena", GrammaticalGender.Feminine)]
    [InlineData(85, "vuitanta-cinquè", GrammaticalGender.Masculine)]
    [InlineData(85, "vuitanta-cinquena", GrammaticalGender.Feminine)]
    [InlineData(90, "norantè", GrammaticalGender.Masculine)]
    [InlineData(90, "norantena", GrammaticalGender.Feminine)]
    [InlineData(99, "noranta-novè", GrammaticalGender.Masculine)]
    [InlineData(99, "noranta-novena", GrammaticalGender.Feminine)]
    [InlineData(100, "centè", GrammaticalGender.Masculine)]
    [InlineData(100, "centena", GrammaticalGender.Feminine)]
    [InlineData(101, "cent primer", GrammaticalGender.Masculine)]
    [InlineData(101, "cent primera", GrammaticalGender.Feminine)]
    [InlineData(110, "cent deu", GrammaticalGender.Masculine)]
    [InlineData(111, "cent onzè", GrammaticalGender.Masculine)]
    [InlineData(120, "cent vint", GrammaticalGender.Masculine)]
    [InlineData(121, "cent vint-i-un", GrammaticalGender.Masculine)]
    [InlineData(121, "cent vint-i-una", GrammaticalGender.Feminine)]
    [InlineData(200, "dos-cents", GrammaticalGender.Masculine)]
    [InlineData(200, "dues-centes", GrammaticalGender.Feminine)]
    [InlineData(201, "dos-cents un", GrammaticalGender.Masculine)]
    [InlineData(201, "dues-centes una", GrammaticalGender.Feminine)]
    [InlineData(221, "dos-cents vint-i-un", GrammaticalGender.Masculine)]
    [InlineData(221, "dues-centes vint-i-una", GrammaticalGender.Feminine)]
    [InlineData(500, "cinc-cents", GrammaticalGender.Masculine)]
    [InlineData(500, "cinc-centes", GrammaticalGender.Feminine)]
    [InlineData(701, "set-cents un", GrammaticalGender.Masculine)]
    [InlineData(701, "set-centes una", GrammaticalGender.Feminine)]
    [InlineData(900, "nou-cents", GrammaticalGender.Masculine)]
    [InlineData(900, "nou-centes", GrammaticalGender.Feminine)]
    [InlineData(999, "nou-cents noranta-nou", GrammaticalGender.Masculine)]
    [InlineData(999, "nou-centes noranta-nou", GrammaticalGender.Feminine)]
    [InlineData(1000, "mil", GrammaticalGender.Masculine)]
    [InlineData(1001, "mil un", GrammaticalGender.Masculine)]
    [InlineData(1001, "mil una", GrammaticalGender.Feminine)]
    [InlineData(1021, "mil vint-i-un", GrammaticalGender.Masculine)]
    [InlineData(1021, "mil vint-i-una", GrammaticalGender.Feminine)]
    [InlineData(1100, "mil cent", GrammaticalGender.Masculine)]
    [InlineData(1100, "mil cent", GrammaticalGender.Feminine)]
    [InlineData(2000, "dos mil", GrammaticalGender.Masculine)]
    [InlineData(2100, "dos mil cent", GrammaticalGender.Masculine)]
    [InlineData(3500, "tres mil cinc-cents", GrammaticalGender.Masculine)]
    [InlineData(3500, "tres mil cinc-centes", GrammaticalGender.Feminine)]
    [InlineData(100000, "cent mil", GrammaticalGender.Masculine)]
    [InlineData(100001, "cent mil un", GrammaticalGender.Masculine)]
    [InlineData(100001, "cent mil una", GrammaticalGender.Feminine)]
    [InlineData(100002, "cent mil dos", GrammaticalGender.Masculine)]
    [InlineData(100002, "cent mil dues", GrammaticalGender.Feminine)]
    [InlineData(100021, "cent mil vint-i-un", GrammaticalGender.Masculine)]
    [InlineData(100021, "cent mil vint-i-una", GrammaticalGender.Feminine)]
    [InlineData(200000, "dos-cents mil", GrammaticalGender.Masculine)]
    [InlineData(200000, "dues-centes mil", GrammaticalGender.Feminine)]
    [InlineData(200121, "dos-cents mil cent vint-i-un", GrammaticalGender.Masculine)]
    [InlineData(200121, "dues-centes mil cent vint-i-una", GrammaticalGender.Feminine)]
    [InlineData(1000000, "un milió", GrammaticalGender.Masculine)]
    [InlineData(1000001, "un milió un", GrammaticalGender.Masculine)]
    [InlineData(1000001, "un milió una", GrammaticalGender.Feminine)]
    [InlineData(2000000, "dos milions", GrammaticalGender.Masculine)]
    [InlineData(2000001, "dos milions un", GrammaticalGender.Masculine)]
    [InlineData(2000001, "dos milions una", GrammaticalGender.Feminine)]
    [InlineData(200000121, "dos-cents milions cent vint-i-un", GrammaticalGender.Masculine)]
    [InlineData(200000121, "dos-cents milions cent vint-i-una", GrammaticalGender.Feminine)]
    public void ToOrdinalWords(int number, string words, GrammaticalGender gender) =>
        Assert.Equal(words, number.ToOrdinalWords(gender));

    [Theory]
    [InlineData(1, WordForm.Abbreviation, GrammaticalGender.Masculine, "1r")]
    [InlineData(1, WordForm.Abbreviation, GrammaticalGender.Feminine, "1a")]
    [InlineData(2, WordForm.Abbreviation, GrammaticalGender.Masculine, "2n")]
    [InlineData(2, WordForm.Abbreviation, GrammaticalGender.Feminine, "2a")]
    [InlineData(3, WordForm.Abbreviation, GrammaticalGender.Masculine, "3r")]
    [InlineData(3, WordForm.Abbreviation, GrammaticalGender.Feminine, "3a")]
    [InlineData(11, WordForm.Abbreviation, GrammaticalGender.Masculine, "11è")]
    [InlineData(11, WordForm.Abbreviation, GrammaticalGender.Feminine, "11a")]
    [InlineData(22, WordForm.Abbreviation, GrammaticalGender.Masculine, "22n")]
    [InlineData(22, WordForm.Abbreviation, GrammaticalGender.Feminine, "22a")]
    [InlineData(31, WordForm.Abbreviation, GrammaticalGender.Masculine, "31r")]
    [InlineData(31, WordForm.Abbreviation, GrammaticalGender.Feminine, "31a")]
    [InlineData(100, WordForm.Abbreviation, GrammaticalGender.Masculine, "100è")]
    [InlineData(100, WordForm.Abbreviation, GrammaticalGender.Feminine, "100a")]
    [InlineData(101, WordForm.Abbreviation, GrammaticalGender.Masculine, "101r")]
    [InlineData(101, WordForm.Abbreviation, GrammaticalGender.Feminine, "101a")]
    [InlineData(999, WordForm.Abbreviation, GrammaticalGender.Masculine, "999è")]
    [InlineData(999, WordForm.Abbreviation, GrammaticalGender.Feminine, "999a")]
    public void ToOrdinalWordsWithWordForm(int number, WordForm wordForm, GrammaticalGender gender, string expected) =>
        Assert.Equal(expected, number.ToOrdinalWords(gender, wordForm));

    [Theory]
    [InlineData(1, WordForm.Abbreviation, GrammaticalGender.Masculine, "1r")]
    [InlineData(1, WordForm.Abbreviation, GrammaticalGender.Feminine, "1a")]
    [InlineData(2, WordForm.Abbreviation, GrammaticalGender.Masculine, "2n")]
    [InlineData(2, WordForm.Abbreviation, GrammaticalGender.Feminine, "2a")]
    [InlineData(3, WordForm.Abbreviation, GrammaticalGender.Masculine, "3r")]
    [InlineData(3, WordForm.Abbreviation, GrammaticalGender.Feminine, "3a")]
    [InlineData(11, WordForm.Abbreviation, GrammaticalGender.Masculine, "11è")]
    [InlineData(11, WordForm.Abbreviation, GrammaticalGender.Feminine, "11a")]
    [InlineData(22, WordForm.Abbreviation, GrammaticalGender.Masculine, "22n")]
    [InlineData(22, WordForm.Abbreviation, GrammaticalGender.Feminine, "22a")]
    [InlineData(31, WordForm.Abbreviation, GrammaticalGender.Masculine, "31r")]
    [InlineData(31, WordForm.Abbreviation, GrammaticalGender.Feminine, "31a")]
    [InlineData(100, WordForm.Abbreviation, GrammaticalGender.Masculine, "100è")]
    [InlineData(100, WordForm.Abbreviation, GrammaticalGender.Feminine, "100a")]
    [InlineData(101, WordForm.Abbreviation, GrammaticalGender.Masculine, "101r")]
    [InlineData(101, WordForm.Abbreviation, GrammaticalGender.Feminine, "101a")]
    [InlineData(999, WordForm.Abbreviation, GrammaticalGender.Masculine, "999è")]
    [InlineData(999, WordForm.Abbreviation, GrammaticalGender.Feminine, "999a")]
    public void ToOrdinalWordsWithWordFormAndGender(int number, WordForm wordForm, GrammaticalGender gender, string expected) =>
        Assert.Equal(expected, number.ToOrdinalWords(gender, wordForm));

    [Theory]
    [InlineData(0, "zero vegades")]
    [InlineData(2, "doble")]
    [InlineData(100, "cent vegades")]
    public void ToTuple(int number, string expected)
        => Assert.Equal(expected, number.ToTuple());

    [Theory]
    [InlineData(0, "zero", GrammaticalGender.Masculine)]
    [InlineData(1, "un", GrammaticalGender.Masculine)]
    [InlineData(1, "una", GrammaticalGender.Feminine)]
    [InlineData(2, "dos", GrammaticalGender.Masculine)]
    [InlineData(2, "dues", GrammaticalGender.Feminine)]
    [InlineData(3, "tres", GrammaticalGender.Masculine)]
    [InlineData(3, "tres", GrammaticalGender.Feminine)]
    [InlineData(11, "onze", GrammaticalGender.Masculine)]
    [InlineData(21, "vint-i-u", GrammaticalGender.Masculine)]
    [InlineData(21, "vint-i-una", GrammaticalGender.Feminine)]
    [InlineData(31, "trenta-u", GrammaticalGender.Masculine)]
    [InlineData(31, "trenta-una", GrammaticalGender.Feminine)]
    [InlineData(81, "vuitanta-u", GrammaticalGender.Masculine)]
    [InlineData(81, "vuitanta-una", GrammaticalGender.Feminine)]
    [InlineData(101, "cent u", GrammaticalGender.Masculine)]
    [InlineData(101, "cent una", GrammaticalGender.Feminine)]
    [InlineData(500, "cinc-cents", GrammaticalGender.Masculine)]
    [InlineData(500, "cinc-centes", GrammaticalGender.Feminine)]
    [InlineData(701, "set-cents u", GrammaticalGender.Masculine)]
    [InlineData(701, "set-centes una", GrammaticalGender.Feminine)]
    [InlineData(3500, "tres mil cinc-cents", GrammaticalGender.Masculine)]
    [InlineData(3500, "tres mil cinc-centes", GrammaticalGender.Feminine)]
    [InlineData(200121, "dos-cents mil cent vint-i-u", GrammaticalGender.Masculine)]
    [InlineData(200121, "dues-centes mil cent vint-i-una", GrammaticalGender.Feminine)]
    [InlineData(200000121, "dos-cents milions cent vint-i-u", GrammaticalGender.Masculine)]
    [InlineData(200000121, "dos-cents milions cent vint-i-una", GrammaticalGender.Feminine)]
    [InlineData(1000001, "un milió u", GrammaticalGender.Masculine)]
    [InlineData(1000001, "un milió una", GrammaticalGender.Feminine)]
    [InlineData(-15, "menys quinze", GrammaticalGender.Masculine)]
    [InlineData(-123, "menys cent vint-i-tres", GrammaticalGender.Masculine)]
    public void ToWords(long number, string expected, GrammaticalGender gender = GrammaticalGender.Masculine) =>
        Assert.Equal(expected, number.ToWords(gender));

}