parameters: 
  signSteps: []
  
steps:
- task: BatchScript@1
  inputs:
    filename: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\Tools\\VsDevCmd.bat"
    arguments: -no_logo
    modifyEnvironment: true
  displayName: Setup Environment Variables

- task: NuGetToolInstaller@0
  displayName: Use NuGet 4.7.0
  inputs:
    versionSpec: 4.7.0

- task: DotNetCoreCLI@2
  inputs:
    command: build
    projects: scripts/setversion.csproj
    arguments: -c $(BuildConfiguration)   
  displayName: Set Version
  condition: eq(variables['system.pullrequest.isfork'], false)

- powershell: |    
    mkdir $(Build.ArtifactStagingDirectory)\Packages
    msbuild .\src\Humanizer.sln /restore /m /p:Configuration=$(BuildConfiguration)
  displayName: Build
  
- powershell: |
    # version    
    nuget install NerdBank.GitVersioning -SolutionDir $(Build.SourcesDirectory) -Verbosity quiet -ExcludeVersion    
    $vers = & $(Build.SourcesDirectory)\packages\nerdbank.gitversioning\tools\Get-Version.ps1
    $nugetVer = $vers.NuGetPackageVersion  
    $commitId = $vers.GitCommitId 
    
    ls .\NuSpecs\*.nuspec | %{ nuget pack $_.FullName -version "$nugetVer" -BasePath "src" -NoPackageAnalysis -OutputDirectory $(Build.ArtifactStagingDirectory)\Packages -Properties "RepositoryType=git;RepositoryCommit=$commitId;RepositoryUrl=https://github.com/Humanizr/Humanizer"}
  displayName: Create packages
  
- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: .\src\Humanizer.Tests\Humanizer.Tests.csproj
    arguments: -c $(BuildConfiguration)   
  displayName: Run Tests
  
- ${{ parameters.signSteps }}

- task: PublishBuildArtifacts@1
  displayName: Publish Package Artifacts
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)\Packages
    artifactType: container
    artifactName: Packages
  condition: eq(variables['system.pullrequest.isfork'], false)
  